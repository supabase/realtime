name: CI
on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}

    defaults:
      run:
        working-directory: ./server

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Postgres
        run: docker-compose -f ../docker-compose.db.yml up -d
      - name: Setup elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: 23.x # Define the OTP version [required]
          elixir-version: 1.11.x # Define the elixir version [required]
      - name: Cache Mix
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Run database migrations
        run: mix ecto.migrate --prefix realtime
      - name: Run tests
        run: mix test
        
  mix-format:
    name: Format and linter checks
    defaults:
      run:
        working-directory: ./server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: 23.x # Define the OTP version [required]
          elixir-version: 1.11.x # Define the elixir version [required]
      - name: Cache Mix
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get
      - name: Compile with warnings
        run: mix compile --warnings-as-errors
      - name: Run formatter
        run: mix format --check-formatted
      - name: Run Credo
        run: mix credo --mute-exit-status
      - name: Retrieve PLT Cache
        uses: actions/cache@v1
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt
      - name: Run dialyzer
        run: mix dialyzer --no-check --halt-exit-status
